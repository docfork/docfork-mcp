# This workflow will run tests using node and then publish a package to npm when a release is published
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run build
      - run: npm test

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for MCP Registry OIDC authentication
      contents: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set version from tag
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Set package version
        run: |
          echo $(jq --arg v "${{ env.VERSION }}" '(.version) = $v' package.json) > package.json
          echo $(jq --arg v "${{ env.VERSION }}" '.version = $v | .packages[0].version = $v' server.json) > server.json

      - name: Update version in source file
        run: |
          sed -i "s/version: \"[0-9]*\.[0-9]*\.[0-9]*\"/version: \"${{ env.VERSION }}\"/" src/index.ts

      - name: Build
        run: npm run build
      - name: Publish to npm (stable)
        if: ${{ !github.event.release.prerelease }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Publish to npm (pre-release)
        if: ${{ github.event.release.prerelease }}
        run: npm publish --access public --tag=beta
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Install MCP Publisher
        run: |
          # Try Homebrew first (most reliable), fallback to direct download
          if command -v brew >/dev/null 2>&1; then
            brew install mcp-publisher
          else
            # Fallback to direct download with proper release detection
            LATEST_RELEASE=$(curl -s https://api.github.com/repos/modelcontextprotocol/registry/releases/latest | grep "tag_name" | cut -d '"' -f 4)
            OS=$(uname -s | tr '[:upper:]' '[:lower:]')
            ARCH=$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/')
            curl -L "https://github.com/modelcontextprotocol/registry/releases/download/${LATEST_RELEASE}/mcp-publisher_${OS}_${ARCH}.tar.gz" | tar xz
            chmod +x mcp-publisher
            sudo mv mcp-publisher /usr/local/bin/
          fi

      - name: Login to MCP Registry
        run: mcp-publisher login github-oidc

      - name: Publish to MCP Registry
        run: mcp-publisher publish
